{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/loadNote.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","GoogleAuthProvider","loadNotes","a","collection","get","notesSnap","forEach","snapShot","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","useState","values","setValues","reset","newFormstate","handleInputChange","target","value","NotesAppBar","useDispatch","useSelector","noteDate","moment","date","className","format","style","display","onChange","e","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeliting","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","message","logout","JournalEntry","backgroundSize","backgroundImage","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","NothingSelected","JournalScreen","LoginScreen","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","marginTop","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.683e62a5.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    login:  '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStarLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New notes',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdate: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Deleted note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n        \r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes]\r\n            }\r\n    \r\n            \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case  types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map( \r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload ) \r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                notes: [],\r\n                active: null\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null \r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        \r\n        case types.uiStarLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n   auth: authReducer,\r\n   ui: uiReducer,\r\n   notes: notesReducer\r\n});\r\n\r\nexport const store =  createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = ( state = {}, action) => { \r\n\r\n    switch (action.type) {\r\n        \r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        \r\n        case types.logout:\r\n            return {}\r\n\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n} \r\n\r\n\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDN2uDP_6400Tv2wwC6cQzCZPEXoJAxAO0\",\r\n    authDomain: \"journal-app-5973a.firebaseapp.com\",\r\n    projectId: \"journal-app-5973a\",\r\n    storageBucket: \"journal-app-5973a.appspot.com\",\r\n    messagingSenderId: \"348124594141\",\r\n    appId: \"1:348124594141:web:f2ec5cad24a3a90579c034\",\r\n    measurementId: \"G-CTWZ21L6QE\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n   const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n\r\n   const notes = [];\r\n   notesSnap.forEach( snapShot => {\r\n        notes.push({\r\n            id: snapShot.id,\r\n            ...snapShot.data()\r\n        })\r\n   })\r\n   return notes;\r\n}","\r\n\r\nexport const fileUpload = async ( file ) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dacja1emr/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp =  await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import Swal from 'sweetalert2'\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNote\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title:'',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote )\r\n        \r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes =  ( uid ) => { \r\n    \r\n    return async ( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) )\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ) );\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const { active:activeNote } = getState().notes;\r\n        Swal.fire({\r\n            title:'Uploading...',\r\n            text:'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n            \r\n        })\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        \r\n        dispatch( startSaveNote(activeNote) )\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeliting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n        \r\n        dispatch( deleteNote( id ) );\r\n\r\n        Swal.fire('Deleted','this note has deleted with success','success')\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormstate = initialState ) => {\r\n        setValues( newFormstate );\r\n    }\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n           ...values,\r\n           [ target.name ] : target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import moment from 'moment';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector( state => state.notes );\r\n    \r\n    const noteDate = moment( active.date );\r\n\r\n    const handleSave = () => {\r\n       dispatch( startSaveNote( active )  )\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ noteDate.format('MMMM Do YYYY') }</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                style={{ display:'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    picture\r\n                </button>\r\n\r\n                <button \r\n                    onClick={ handleSave }\r\n                    className=\"btn\"\r\n                >\r\n                    save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeliting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active:note } = useSelector( state => state.notes );\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n    }, [ note, reset ])\r\n\r\n    useEffect(() => {\r\n        dispatch( activeNote( formValues.id, { ...formValues }) )\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeliting( id ) )\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\" >\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    name=\"body\"\r\n                    placeholder=\"What happend today\"\r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                >\r\n                </textarea>\r\n\r\n                {\r\n                    ( note.url ) &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={ note.url }\r\n                            alt=\"un arbol\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button \r\n                className=\"btn btn-danger h-70 btrr-15 btlr-15\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStarLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","import Swal from 'sweetalert2'\r\n\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from '../types/types'\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return ( dispatch ) => {\r\n        \r\n        dispatch( startLoading() )\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then(({ user }) => {\r\n                dispatch( login( user.uid, user.displayName) )\r\n                dispatch( finishLoading() )\r\n            })\r\n            .catch(e => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ({ email, password, name }) => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n\r\n                dispatch( \r\n                    login( user.uid, user.displayName )\r\n                )\r\n            })\r\n            .catch(e => {\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch( \r\n                    login( user.uid, user.displayName )\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = ( uid, displayName ) => ({ \r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() )\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n    const dispatch = useDispatch();    \r\n    const noteDate = moment( date );\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( \r\n            activeNote(id, { \r\n                title,\r\n                body,\r\n                url,\r\n                date\r\n            }) \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry animate__animated animate__fadeIn\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            {\r\n                url && \r\n                <div \r\n                    className=\"journal__entry-picture\" \r\n                    style={{\r\n                        backgroundSize:'cover',\r\n                        backgroundImage:`url(${ url })`\r\n                    }}\r\n                ></div>\r\n            }\r\n            <div className=\"journal__entry-body\" >\r\n                <p className=\"journal__entry-title\">{ title }</p>\r\n                <p className=\"jorunal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\" >\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n    \r\n    return (\r\n        <div \r\n            className=\"journal__entries pointer animate__animated animate__fadeIn\"\r\n        >\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id } \r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLoggout = () => {\r\n        dispatch( startLogout() )\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button \r\n                   onClick={ handleLoggout }\r\n                   className=\"btn\"\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div \r\n                onClick={ handleAddNew }\r\n                className=\"journal__new-entry\"\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\" >\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                pr create an entry\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\r\n            \r\n        >\r\n            <Sidebar />\r\n\r\n            <main>\r\n                \r\n                {\r\n                    (active)\r\n                        ? <NoteScreen />\r\n                        : <NothingSelected />\r\n\r\n                }\r\n                \r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email:'',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword( email, password) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-network\">\r\n                    <p>Login with social network</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"    \r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator'\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name:'',\r\n        email:'',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => { \r\n        e.preventDefault();\r\n        \r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName({ email, password, name }) )\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if ( name.trim().length === 0 ){\r\n            dispatch( setError('Name is required') );\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ){\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        }else if ( password !== password2 || password.length < 5 ){\r\n            dispatch( setError('Password should be at least 6 characters and match each other') );\r\n            return false;\r\n        }\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Regiater</h3>\r\n\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    msgError && \r\n                    (\r\n                        <div className=\"auth__alert-error\" >\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={ handleInputChange }\r\n                    value={ name }\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={ handleInputChange }\r\n                    value={ email }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                    value={ password }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"confirmPassword\"\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                    value={ password2 }\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"    \r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\"  />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route  \r\n            { ...rest } \r\n            component={ ( props ) => ( \r\n                (isAuthenticated) \r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route  \r\n            { ...rest } \r\n            component={ ( props ) => ( \r\n                ( isAuthenticated  ) \r\n                ? ( <Redirect to=\"/\" /> )\r\n                : ( <Component { ...props } /> )\r\n            )}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React , { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    Switch\r\n} from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux'\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [ checking, setChecking ] = useState(true);\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false)\r\n\r\n    useEffect( () => {\r\n      \r\n        firebase.auth().onAuthStateChanged(async ( user ) => {\r\n            if ( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n                \r\n               \r\n            }else{\r\n                setIsLoggedIn( false );\r\n            }\r\n            \r\n            setChecking( false );\r\n        })\r\n\r\n    },[ dispatch, setChecking ]);\r\n\r\n    if ( checking ) {\r\n        return (\r\n            <center>\r\n                <h1 style={{marginTop:'40vh'}}> Please wait...</h1>\r\n            </center>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div >\r\n                <Switch>\r\n                    <PublicRoute   \r\n                        path=\"/auth\" \r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    /> \r\n\r\n                    <PrivateRoute \r\n                        exact\r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/\" \r\n                        component={ JournalScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\"  />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store } >\r\n            <AppRouter  />\r\n        </Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}